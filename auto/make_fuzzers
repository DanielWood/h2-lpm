sed -i 's/[^_]main(/fuzz_without_main(/g' src/core/nginx.c

mkdir -p $NGX_OBJS/src/fuzz

ngx_all_objs_fuzz=`echo $ngx_all_srcs \
    | sed -e "s#\([^ ]*\.\)cc#$NGX_OBJS\/\1$ngx_objext#g" \
          -e "s#\([^ ]*\.\)c#$NGX_OBJS\/\1$ngx_objext#g"`

ngx_deps_fuzz=`echo $ngx_all_objs_fuzz $ngx_modules_obj $ngx_res $LINK_DEPS protobufs \
    | sed -e "s/  *\([^ ][^ ]*\)/$ngx_regex_cont\1/g" \
          -e "s/\//$ngx_regex_dirsep/g"`

ngx_objs=`echo $ngx_all_objs $ngx_modules_obj \
    | sed -e "s/  *\([^ ][^ ]*\)/$ngx_long_regex_cont\1/g" \
          -e "s/\//$ngx_regex_dirsep/g"`

cat << END                                                    >> $NGX_MAKEFILE

fuzzer: objs/h2fuzzer

objs/h2fuzzer: $ngx_deps_fuzz
	 clang++ \$(CXXFLAGS) src/fuzz/h2fuzzer.cc \
	 src/fuzz/protobuf_encoders.cc \
	 src/fuzz/hpack_compressor.cc \
	 src/fuzz/genfiles/h2_frame_grammar.pb.cc \
	 src/fuzz/genfiles/h2_sequence.pb.cc \
	 -o objs/h2fuzzer \
	 \$(CORE_INCS) \$(HTTP_INCS) \
	 -I src/fuzz/genfiles/ -I \$(SRC)/ \
	 -I src/fuzz/ \
	 -I libprotobuf-mutator/ \
	 -I LPM/external.protobuf/include \
	 LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \
  	 LPM/src/libprotobuf-mutator.a \
  	 LPM/external.protobuf/lib/libprotobuf.a \
	 $ngx_binexit$ngx_long_cont$ngx_objs \
   	 \$(LIB_FUZZING_ENGINE) $ngx_libs$ngx_link$ngx_main_link -lcrypt -lpthread -fsanitize=fuzzer,address -g -std=c++20 --coverage
$ngx_long_end

protobufs:
	cd src/fuzz; ../../LPM/external.protobuf/bin/protoc --cpp_out=genfiles h2_frame_grammar.proto h2_sequence.proto; ../../LPM/external.protobuf/bin/protoc --python_out=wireshark h2_frame_grammar.proto h2_sequence.proto

END
