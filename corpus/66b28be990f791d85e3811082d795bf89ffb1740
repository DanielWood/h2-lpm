exchanges {
  request_sequence {
    frames {
      data_frame {
        pad_length: 0
        data: " // currency default is \'USD\'\n  var currency = \'USD\';\n  if (replacements.currency) {\n    currency = replacements.currency\n  };\n\n  decodeProducts = function (prodID, products) {\n    var decoded = decodeURIComponent(prodID);\n    products = decoded.split(\',\');\n    return products;\n  }\n\n  return {\n    \'PageView\': { \'condition\': function (params) { return true; } },\n    \'ViewContent\': {\n      \'condition\': function (params) {\n        if (params[\'pt\'] != undefined && params[\'pt\'] == \'cat\' || params[\'pt\'] == \'cart\') {\n          return false\n        }\n        return params[\'prodID\'] != undefined && params[\'prodID\'] != \'\'\n      },\n      \'payload\': function (params) {\n        var products = [];\n        if (params[\'prodID\'] != undefined && params[\'prodID\'] != \'\') {\n          products = decodeProducts(params[\'prodID\'], products);\n        }\n        return { \'content_type\': content_type, \'content_ids\': products }\n      }\n    },\n    \'AddToCart\': {\n      \'condition\': function (params) { return params[\'cart\'] != \'\' },\n      \'payload\': function (params) {\n        var products = [];\n        if (params[\'prodID\'] != undefined && params[\'prodID\'] != \'\') {\n          products = decodeProducts(params[\'prodID\'], products);\n        }\n        if (products.length > 0) {\n          return { \'value\': params[\'cart\'], \'currency\': currency, \'content_type\': content_type, \'content_ids\': products };\n        } else {\n          return {};\n        }\n      }\n    },\n    \'InitiateCheckout\': {\n      \'condition\': function (params) {\n        if (params[\'pt\'] != undefined && params[\'pt\'] == \'checkout\') {\n          return true;\n        }\n      }\n    },\n    \'Purchase\': {\n      \'condition\': function (params) { return params[\'orderNumber\'] != \'\' && params[\'price\'] != \'\' },\n      \'payload\': function (params) {\n        var products = [];\n        if (params[\'prodID\'] != undefined && params[\'prodID\'] != \'\') {\n          products = decodeProducts(params[\'prodID\'], products);\n        }\n        // IN-9677 Facebook is rejecting symbols from price this included commas and negative values\n        var price = params[\'price\'].replace(\',\', \'\');\n        if (price < 0) { price = 0.00 }\n        // End update from IN-9677\n        return { \'value\': price, \'currency\': currency, \'content_ids\': products, \'content_type\': content_type }\n      }\n    }\n  }\n}\n\n        implementSnapchat = function () {\n  var snap = parameters[\"snapchat\"];\n  if (snap.id == \"\") return;\n  (function (win, doc, sdk_url) {\n    if (win.snaptr) return;\n    var tr = (win.snaptr = function () {\n      tr.handleRequest\n        ? tr.handleRequest.apply(tr, arguments)\n        : tr.queue.push(arguments);\n    });\n    tr.queue = [];\n    var s = \"script\";\n    var new_script_section = doc.createElement(s);\n    new_script_section.async = !0;\n    new_script_section.src = sdk_url;\n    var insert_pos = doc.getElementsByTagName(s)[0];\n    insert_pos.parentNode.insertBefore(new_script_section, insert_pos);\n  })(window, document, \"https://sc-static.net/scevent.min.js\");\n  snaptr(\"init\", snap.id);\n  var defaultEvents = snapchatEvents({});\n\n  if (snap.defaults != false) {\n    for (e in snap.events) {\n      // use default events overrides if they were provided\n      if (defaultEvents[e]) {\n        var c = snap.events[e];\n        if (c.condition) {\n          defaultEvents[e].condition = c.condition;\n        }\n        if (c.payload) {\n          defaultEvents[e].payload = c.payload;\n        }\n      }\n    }\n    // use default events\n    snap.events = defaultEvents;\n  }\n\n  for (e in snap.events) {\n    var c = snap.events[e];\n    if (c && c.condition(parameters)) {\n      if (c.payload) {\n        snaptr(\"track\", e, c.payload(parameters));\n      } else {\n        snaptr(\"track\", e);\n      }\n    }\n  }\n};\n\n// replacements is an object with keys indicating desired value substitutions\n// example: {\'item_category\': \'product_group\'}\nsnapchatEvents = function (replacements) {\n  // currency default is \'USD\'\n  var currency = \"USD\";\n  if (replacements.currency) {\n    currency = replacements.currency;\n  }\n\n  return {\n    \'PAGE_VIEW\': {\n      condition: function (params) {\n        return (\n          (params[\"pt\"] != undefined && params[\"pt\"] === \"home\") ||\n          params[\"pt\"] === \"prod\" ||\n          params[\"pt\"] === \"cat\"\n        );\n      }\n    },\n    \'VIEW_CONTENT\': {\n      condition: function (params) {\n        return (\n          params[\"pt\"] != undefined &&\n          params[\"pt\"] === \"prod\" &&\n          params[\"prodID\"] != \"\"\n        );\n      },\n      payload: function (params) {\n        var products = [];\n        if (params[\"prodID\"] != undefined && params[\"prodID\"] != \"\") {\n          products = params[\"prodID\"].split(\",\");\n          category = params[\"catID\"];\n        }\n        return { item_category: category, item_ids: products };\n      },\n    },\n    \'ADD_CART\': {\n      condition: function (params) {\n        return (\n          params[\"pt\"] != undefined &&\n          params[\"pt\"] === \"cart\" &&\n          params[\"cart\"] != \"\"\n        );\n      },\n      payload: function (params) {\n        var products = [];\n        if (params[\"prodID\"] != undefined && params[\"prodID\"] != \"\") {\n          products = params[\"prodID\"].split(\",\");\n          category = params[\"catID\"];\n        }\n        if (products.length > 0) {\n          return { item_category: category, item_ids: products };\n        } else {\n          return {};\n        }\n      },\n    },\n    // Requires a hashed email but currently we don\'t pass this param\n    \'SIGN_UP\': {\n      condition: function (params) {\n        return params[\"pt\"] != undefined && params[\"pt\"] === \"sign_up\";\n      },\n      payload: function (params) {\n        var hashedEmail = \"\";\n        return { user_email: hashedEmail };\n      },\n    },\n    \'PURCHASE\': {\n      condition: function (params) {\n        return (\n          params[\"pt\"] != undefined &&\n          params[\"pt\"] === \"conv\" &&\n          params[\"orderNumber\"] != \"\" &&\n          params[\"price\"] != \"\"\n        );\n      },\n      payload: function (params) {\n        var products = [];\n        if (params[\"prodID\"] != undefined && params[\"prodID\"] != \"\") {\n          products = params[\"prodID\"].split(\",\");\n          category = params[\"catID\"];\n        }\n        return {\n          price: params[\"price\"],\n          currency: currency,\n          item_ids: products,\n          item_category: category,\n        };\n      },\n    }\n  };\n};\n\n        appendUrlPixels = function (rm_fire3p) {\n  function extractHostname(url) {\n    var hostname;\n\n    if (url.indexOf(\'://\') > -1) {\n      hostname = url.split(\'/\')[2];\n    } else {\n      hostname = url.split(\'/\')[0];\n    }\n\n    hostname = hostname.split(\':\')[0];\n    hostname = hostname.split(\'?\')[0];\n\n    return hostname;\n  }\n\n  function extractRootDomain(url) {\n    var domain = extractHostname(url);\n    var splitArr = domain.split(\'.\');\n    var arrLen = splitArr.length;\n\n    if (arrLen > 2) {\n      domain = splitArr[arrLen - 2] + \".\" + splitArr[arrLen - 1];\n      if (splitArr[arrLen - 2].length === 2 && splitArr[arrLen - 1].length === 2) {\n        domain = splitArr[arrLen - 3] + \".\" + domain;\n      }\n    }\n    return domain;\n  }\n\n  var content = \'\';\n  for (var url in urlPixelDrops) {\n    if (urlPixelDrops.hasOwnProperty(url)) {\n      var dropObject = urlPixelDrops[url];\n      var dropCheck = null;\n      switch (dropObject.dropType) {\n        case \'equals\':\n          dropCheck = function (href, url) {\n            return href == encodeURIComponent(url)\n          };\n          break;\n        case \'contains\':\n          dropCheck = function (href, url) {\n            return href.indexOf(encodeURIComponent(url)) != -1\n          };\n          break;\n        case \'without_querystrings\':\n          dropCheck = function (href, url) {\n            var baseUrl = decodeURIComponent(href).split(\'?\')[0];\n            return baseUrl === url;\n          };\n          break;\n      }\n\n      // TODO: Consolidate internalDomain list\n      var internalDomains=[\"linksynergy.com\", \"dpclk.com\", \"nxtck.com\", \"mediaforge.com\", \"jrs5.com\", \"dc-storm.com\", \"linksynergy.walmart.com\"];\n\n      if (dropCheck(parameters[\'href\'], url)) {\n        var pixelArray = dropObject[\'pixels\'];\n        if (!(pixelArray instanceof"
        end_stream: false
        stream_id: 3
      }
    }
  }
  response_sequence {
  }
}
exchanges {
  request_sequence {
    frames {
      headers_frame {
        pad_length: 39168
        exclusive: false
        stream_dependency: 0
        weight: 0
        end_stream: false
        end_headers: false
        priority: false
        stream_id: 0
      }
    }
  }
  response_sequence {
  }
}
